doctype html
html
  meta(http-equiv='Content-Type', content='text/html; charset=UTF-8')
  title 데이터
  .one-graph
  script(src='https://d3js.org/d3.v4.min.js')

  script.
    var w = 400, h = 400;
    var dataName = ["식비", "문화생활비", "건강관리비", "의류미용비", "교통비","주거생활비", "학비","사회생활비", "저축","여행","기타"];
    var graphData = [56, 12, 120, 20, 89,40,70,10,80,100,47];
   
  
    var colorData = ["#FD2F56", "#F1E7DE", "#343F3A", "#5ED1D4", "#FFC001","#FFD9EC","#EAEAEA","#6B9900","#8041D9","#B2CCFF","#B7F0B1"];
    var pie = d3.pie();
    var arc = d3.arc().innerRadius(40).outerRadius(200);
    var svg = d3.select(".one-graph")
    .append("svg")
    .attr("width", w)
    .attr("height", h)
    .attr("id", "graphWrap");
    var g = svg.selectAll(".pie")
    .data(pie(graphData))
    .enter()
    .append("g")
    .attr("class", "pie")
    .attr("transform","translate("+w/2+","+h/2+")");
    g.append("path")
    .style("fill", function(d, i) {
    return colorData[i];
    })
    .transition()
    .duration(400)
    .delay(function(d, i) {
    return i * 400;
    })
    .attrTween("d", function(d, i) {
    var interpolate = d3.interpolate(
    {startAngle : d.startAngle, endAngle : d.startAngle},
    {startAngle : d.startAngle, endAngle : d.endAngle}
    );
    return function(t){
    return arc(interpolate(t));
    }
    });
    g.append("text")
    .attr("transform", function(d) { return "translate(" + arc.centroid(d) + ")"; })
    .attr("dy", ".35em")
    .style("text-anchor", "middle")
    .text(function(d, i) {
    return  d.endAngle-d.startAngle > 0.2 ?
    dataName[i] + " (" + Math.round(1000*(d.endAngle-d.startAngle)/(Math.PI*2))/10 + "%)" : ""
    });
    svg.append("text")
    .attr("class", "total")
    .attr("transform", "translate("+(w/2-35)+", "+(h/2+5)+")")
    

  script.
    var w = 400, h = 400;
    var dataName = ["근로소득", "금융소득", "기타"];
    var graphData = [33, 20, 15];
    var colorData = ["#FFA7A7", "#D1B2FF","#FFE400"];
    var pie = d3.pie();
    var arc = d3.arc().innerRadius(40).outerRadius(200);
    var svg = d3.select(".one-graph")
    .append("svg")
    .attr("width", w)
    .attr("height", h)
    .attr("id", "graphWrap");
    var g = svg.selectAll(".pie")
    .data(pie(graphData))
    .enter()
    .append("g")
    .attr("class", "pie")
    .attr("transform","translate("+w/2+","+h/2+")");
    g.append("path")
    .style("fill", function(d, i) {
    return colorData[i];
    })
    .transition()
    .duration(400)
    .delay(function(d, i) {
    return i * 400;
    })
    .attrTween("d", function(d, i) {
    var interpolate = d3.interpolate(
    {startAngle : d.startAngle, endAngle : d.startAngle},
    {startAngle : d.startAngle, endAngle : d.endAngle}
    );
    return function(t){
    return arc(interpolate(t));
    }
    });
    g.append("text")
    .attr("transform", function(d) { return "translate(" + arc.centroid(d) + ")"; })
    .attr("dy", ".35em")
    .style("text-anchor", "middle")
    .text(function(d, i) {
    return  d.endAngle-d.startAngle > 0.2 ?
    dataName[i] + " (" + Math.round(1000*(d.endAngle-d.startAngle)/(Math.PI*2))/10 + "%)" : ""
    });
    svg.append("text")
    .attr("class", "total")
    .attr("transform", "translate("+(w/2-35)+", "+(h/2+5)+")")
    

